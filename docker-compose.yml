version: '3.9'
services:
  frontend:
    container_name: app_frontend
    build: ./front-end
    ports:
      - 3000:3000
    platform: linux/x86_64
    working_dir: /app-front-end
    volumes:
      - ./front-end/src:/app-front-end/src
    depends_on:
      backend:
        condition: service_healthy
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: [ "CMD", "lsof", "-t", "-i:3000" ]         
      timeout: 10s
      retries: 5
  backend:
    container_name: app_backend
    build: ./back-end
    ports:
      - 3001:3001
    platform: linux/x86_64
    working_dir: /app-back-end
    # Caso queira que o container esteja atualizado durante o desenvolvimento, sem que você precise ficar fazendo down e up dos containers, descomente as 3 linhas abaixo
    command: dev
    volumes:
      - ./back-end/src:/app-back-end/src
      - ./back-end/build:/app-back-end/build
    depends_on:
      db:
        condition: service_healthy
    environment:
      - API_PORT=3001
      - JWT_SECRET=jwt_secret
      # Os dados abaixo se referem ao container `db`
      # Dica: Relembre aqui da comunicação interna entre containers
      - MYSQL_USER=root
      - MYSQL_PASSWORD=senhaDoDB
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
    healthcheck:
      test: [ "CMD", "lsof", "-t", "-i:3001" ]         
      timeout: 10s
      retries: 5
  db:
    image: mysql:8.0.21
    container_name: db
    platform: linux/x86_64
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=senhaDoDB
    restart: 'always'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]         
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
